/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bd;

import static bd.principal.getConnection;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/**
 *
 * @author Edgar
 */
public class Partidos extends javax.swing.JFrame {
//prueba
    /**
     * Creates new form Partidos
     */
    public Partidos() {
        initComponents();
    }
    
    public static final String url= "jdbc:mysql://localhost:3306/liga";
    public static final String user= "root";
    public static final String password= "";
    
    PreparedStatement ps;
    ResultSet rs;
    public static Connection getConnection() throws SQLException{
         Connection con= null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection(url, user, password);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Partidos.class.getName()).log(Level.SEVERE, null, ex);
        }
        return con;
        
        
    }
    
    private void limpiarDatos(){
        jornada.setText(null);
        equipo1.setText(null);
        equipo2.setText(null);
        fecha.setText(null);
        marcador1.setText(null);
        marcador2.setText(null);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jornada = new javax.swing.JTextField();
        equipo1 = new javax.swing.JTextField();
        equipo2 = new javax.swing.JTextField();
        fecha = new javax.swing.JTextField();
        marcador1 = new javax.swing.JTextField();
        marcador2 = new javax.swing.JTextField();
        agregar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        MENU = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("REGISTRO DE PARTIDOS");

        jLabel2.setText("ID DE LA JORNADA:");

        jLabel3.setText("ID DEL EQUIPO LOCAL:");

        jLabel4.setText("ID DEL EQUIPO VISITANTE:");

        jLabel5.setText("FECHA:");

        jLabel6.setText("MARCADOR LOCAL:");

        jLabel7.setText("MARCADOR VISITA:");

        jornada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jornadaActionPerformed(evt);
            }
        });

        agregar.setBackground(new java.awt.Color(0, 153, 0));
        agregar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        agregar.setText("+");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        eliminar.setBackground(new java.awt.Color(255, 0, 0));
        eliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        eliminar.setText("-");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        buscar.setBackground(new java.awt.Color(255, 204, 51));
        buscar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        buscar.setText("BUSCAR");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        guardar.setBackground(new java.awt.Color(0, 102, 255));
        guardar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        guardar.setText("EDITAR");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        MENU.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        MENU.setText("REGRESAR AL MENÃš");
        MENU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MENUActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tablaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jornada)
                                    .addComponent(equipo1)
                                    .addComponent(equipo2)
                                    .addComponent(fecha)
                                    .addComponent(marcador1)
                                    .addComponent(marcador2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buscar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(agregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(guardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MENU))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jornada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(equipo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(equipo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(marcador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(marcador2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar)
                    .addComponent(eliminar)
                    .addComponent(guardar)
                    .addComponent(MENU))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MENUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MENUActionPerformed
        // TODO add your handling code here:
        principal abrir = new principal();
        abrir.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MENUActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        Connection con = null;
        
        try {
            
            con = getConnection();
            ps = con.prepareStatement("INSERT INTO PARTIDO (ID_jornada,id_equipo_local,id_equipo_visita,fecha,Marcador_local,Marcador_visita) VALUES(?,?,?,?,?,?) ");
            
            ps.setString(1, jornada.getText());
            ps.setString(2, equipo1.getText());
            ps.setString(3, equipo2.getText());
            ps.setDate(4, Date.valueOf(fecha.getText()));
            ps.setString(5, marcador1.getText());
            ps.setString(6, marcador2.getText());
            
            int res =ps.executeUpdate();
            
             if (res>0) {
                JOptionPane.showMessageDialog(null,"Dato Guardado");
                limpiarDatos();
        String columnas, sql;
        try {
            con = getConnection();
//            Class.forName("com.mysql.jdbc.Driver");
//            con = DriverManager.getConnection("jdbc:mysql://localhost;3306/partido","root"," ");
            Statement st = con.createStatement();
            sql="select * from partido";
            ResultSet rstb=st.executeQuery(sql);
            ResultSetMetaData rsmd=rstb.getMetaData();
            int col=rsmd.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            
            for(int i=1; i<=col;i++){
                modelo.addColumn(rsmd.getColumnLabel(i));
            }
            
            while (rstb.next()){
                String filas[]=new String[col];
                for(int j=0; j<col;j++){
                    filas[j]=rstb.getString(j+1);
                }
                modelo.addRow(filas);
            }
            
            tabla.setModel(modelo);
//            rstb.close();
//            con.close();
        } catch (Exception e) {
        }
             }else{
                JOptionPane.showMessageDialog(null,"Error");
                limpiarDatos();
             }
             con.close();
        } catch (Exception e) {
            System.err.print(e);
        }
    }//GEN-LAST:event_agregarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
//        Connection con = null;
//        
//        try {
//            con = getConnection();
//            ps = con.prepareStatement("SELECT * FROM PARTIDO WHERE"+ jornada +"=?"+equipo1+"=?");
//            ps.setString(1, jornada.getText());
//            ps.setString(2, equipo1.getText());
//            
//            rs = ps.executeQuery();
//            
//            if(rs.next()){
//                jornada.setText(rs.getString("ID_jornada"));
//                equipo1.setText(rs.getString("id_equipo_local"));
//                equipo2.setText(rs.getString("id_equipo_visita"));
//                fecha.setText(rs.getString("fecha"));
//                marcador1.setText(rs.getString("marcador_local"));
//                marcador2.setText(rs.getString("marcador_visita"));
//                
//            }else{
//                JOptionPane.showMessageDialog(null, "EL DATO INGRESADO NO EXISTE");
//                limpiarDatos();
//            }
//         } catch (Exception e) {
//            System.err.print(e);
//        }
        
Connection con = null;
        String columnas, sql;
        try {
            con = getConnection();
//            Class.forName("com.mysql.jdbc.Driver");
//            con = DriverManager.getConnection("jdbc:mysql://localhost;3306/partido","root"," ");
            Statement st = con.createStatement();
            sql="select ID_jornada,id_equipo_local,id_equipo_visita,fecha,Marcador_local,Marcador_visita from partido where id_jornada= "+jornada.getText();
            ResultSet rstb=st.executeQuery(sql);
            ResultSetMetaData rsmd=rstb.getMetaData();
            int col=rsmd.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            
            for(int i=1; i<=col;i++){
                modelo.addColumn(rsmd.getColumnLabel(i));
            }
            
            while (rstb.next()){
                String filas[]=new String[col];
                for(int j=0; j<col;j++){
                    filas[j]=rstb.getString(j+1);
                }
                modelo.addRow(filas);
                
            }
            tabla.setModel(modelo);
//            rstb.close();
//            con.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        Connection con = null;

        try {

            con = getConnection();
            ps = con.prepareStatement("UPDATE PARTIDO SET ID_jornada=?,id_equipo_local=?,id_equipo_visita=?,fecha=?,Marcador_local=?,Marcador_visita=? WHERE ID_Partido= ?");

            ps.setString(1, jornada.getText());
            ps.setString(2, equipo1.getText());
            ps.setString(3, equipo2.getText());
            ps.setDate(4, Date.valueOf(fecha.getText()));
            ps.setString(5, marcador1.getText());
            ps.setString(6, marcador2.getText());
            int res = ps.executeUpdate();

            if (res > 0) {
                JOptionPane.showMessageDialog(null, "Dato Modificado");
                limpiarDatos();
                String columnas, sql;
                try {
                    con = getConnection();
//            Class.forName("com.mysql.jdbc.Driver");
//            con = DriverManager.getConnection("jdbc:mysql://localhost;3306/partido","root"," ");
                    Statement st = con.createStatement();
                    sql = "select * from partido";
                    ResultSet rstb = st.executeQuery(sql);
                    ResultSetMetaData rsmd = rstb.getMetaData();
                    int col = rsmd.getColumnCount();
                    DefaultTableModel modelo = new DefaultTableModel();

                    for (int i = 1; i <= col; i++) {
                        modelo.addColumn(rsmd.getColumnLabel(i));
                    }

                    while (rstb.next()) {
                        String filas[] = new String[col];
                        for (int j = 0; j < col; j++) {
                            filas[j] = rstb.getString(j + 1);
                        }
                        modelo.addRow(filas);
                    }

                    tabla.setModel(modelo);
//            rstb.close();
//            con.close();
                } catch (Exception e) {
                }
            } else {
                JOptionPane.showMessageDialog(null, "Error");
                limpiarDatos();
            }
            con.close();
        } catch (Exception e) {
            System.err.print(e);
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        Connection con = null;
        int fila = tabla.getSelectedRow();
        
    
        try {
            
            con = getConnection();
             String sql="delete from partido where id="+fila;
//            ps = con.prepareStatement("DELETE FROM PARTIDO WHERE id_jornada= "+tabla.getValueAt(fila,0));
//            ps.setInt(1, Integer.parseInt(jornada.getText()));
            
            int res =ps.executeUpdate();
            
             if (res>0) {
                JOptionPane.showMessageDialog(null,"Dato Eliminado");
                limpiarDatos();
//        String columnas, sql;
        try {
            con = getConnection();
            Statement st = con.createStatement();
            sql="select * from partido";
            ResultSet rstb=st.executeQuery(sql);
            ResultSetMetaData rsmd = rstb.getMetaData();
            int col = rsmd.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            for (int i = 1; i<=col;i++){
                modelo.addColumn(rsmd.getColumnLabel(i));
            }
            
            while (rstb.next()){
                String filas[]=new String[col];
                for(int j=0; j<col;j++){
                    filas[j]=rstb.getString(j+1);
                }
                modelo.addRow(filas);
                
            }
            
            tabla.setModel(modelo);
//            rstb.close();
//            con.close();
        } catch (Exception e) {
        }
             }else{
                JOptionPane.showMessageDialog(null,"Error");
                limpiarDatos();
             }
             con.close();
        } catch (Exception e) {
            System.err.print(e);
        }
        
    }//GEN-LAST:event_eliminarActionPerformed

    private void tablaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tablaAncestorAdded
        // TODO add your handling code here:
        Connection con = null;
        String columnas, sql;
        
        try {
            con = getConnection();
//            Class.forName("com.mysql.jdbc.Driver");
//            con = DriverManager.getConnection("jdbc:mysql://localhost;3306/partido","root"," ");
            Statement st = con.createStatement();
            sql="select * from partido";
            ResultSet rstb=st.executeQuery(sql);
            ResultSetMetaData rsmd=rstb.getMetaData();
            int col=rsmd.getColumnCount();
            DefaultTableModel modelo = new DefaultTableModel();
            
            for(int i=1; i<=col;i++){
                modelo.addColumn(rsmd.getColumnLabel(i));
            }
            while (rstb.next()){
                String filas[]=new String[col];
                for(int j=0; j<col;j++){
                    filas[j]=rstb.getString(j+1);
                }
                modelo.addRow(filas);
                
            }
            tabla.setModel(modelo);
//            rstb.close();
//            con.close();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_tablaAncestorAdded

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        
    }//GEN-LAST:event_tablaMouseClicked

    private void jornadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jornadaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jornadaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Partidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Partidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Partidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Partidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Partidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MENU;
    private javax.swing.JButton agregar;
    private javax.swing.JButton buscar;
    private javax.swing.JButton eliminar;
    private javax.swing.JTextField equipo1;
    private javax.swing.JTextField equipo2;
    private javax.swing.JTextField fecha;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jornada;
    private javax.swing.JTextField marcador1;
    private javax.swing.JTextField marcador2;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

    private Connection MySQLConnection(String root, String string, String liga) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
